OmEntry {	#tags : {		#author : 'BenTran',		#time : DateAndTime [ '2020-02-06T10:00:37.274766-05:00' ],		#prior : OmReference [ 'Pharo7.0.4-0-32bit-ccd1f64.dp4qau5j4svhh0fvkkjafbyou', '1' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RobotMind,				#isMetaSide : false			},			#name : #initialize,			#protocol : #running,			#sourceCode : 'initialize \r\n\t"COMPETITION ENTRIES _MAY_ OVERRIDE THIS METHOD.\r\n\t This method is not part of the competition API, but a standard part of Pharo\r\n\t called when objects are instatiated."\r\tdoesYellowSquareExist := false.\r\thighestPointSquares := OrderedCollection new. \r\tdepthNN := 1. "number of layers deep that the NN should look at"\r\tcurrentX := 0.\r\tcurrentY := 0.\r\tdirectionList := OrderedCollection new.\r\n\tsuper initialize',			#stamp : 'BenTran 2/1/2020 00:22',			#package : #JRMPC-Phase1-Minds		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RobotMind,				#isMetaSide : false			},			#name : #initialize,			#protocol : #running,			#sourceCode : 'initialize \r\n\t"COMPETITION ENTRIES _MAY_ OVERRIDE THIS METHOD.\r\n\t This method is not part of the competition API, but a standard part of Pharo\r\n\t called when objects are instatiated."\r\tdoesYellowSquareExist := false.\r\thighestPointSquares := OrderedCollection new. \r\tdepthNN := 4. "number of layers deep that the NN should look at"\r\tcurrentX := 0.\r\tcurrentY := 0.\r\tdirectionList := OrderedCollection new.\r\n\tsuper initialize',			#stamp : 'BenTran 2/6/2020 10:00',			#package : #JRMPC-Phase1-Minds		}	}}OmEntry {	#tags : {		#author : 'BenTran',		#time : DateAndTime [ '2020-02-06T10:03:56.676766-05:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RobotMind,				#isMetaSide : false			},			#name : #'Dijkstra:Robot:',			#protocol : #'as yet unclassified',			#sourceCode : 'Dijkstra: scanningRadius Robot: sketchRobot\r\t"create a new list of all points within the robots scanning radius ----------------------------------------"\r\t',			#stamp : 'BenTran 2/6/2020 09:07',			#package : #JRMPC-Phase1-Minds		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RobotMind,				#isMetaSide : false			},			#name : #'Dijkstra:Robot:',			#protocol : #'as yet unclassified',			#sourceCode : 'Dijkstra: scanningRadius Robot: sketchRobot\r\t"create a new list of all points within the robots scanning radius ----------------------------------------"\r\t| grid pointsList x y|\r\tgrid := OrderedCollection new.\r\tpointsList := OrderedCollection new. \r\tx := sketchRobot location x.\r\ty := sketchRobot location y.\r\t\r\t 0 to: (scanningRadius * 2 + 1) do: [:xCord|\r\t\t0 to: (scanningRadius * 2 + 1) do: [:yCord|\r\t\t\t| xPoint yPoint |.\r\t\t\txPoint := x - scanningRadius + xCord.\r\t\t\tyPoint := y - scanningRadius + yCord.\r\t\t\t\r\t\t ].\r\t].\r\t',			#stamp : 'BenTran 2/6/2020 10:03',			#package : #JRMPC-Phase1-Minds		}	}}OmEntry {	#tags : {		#author : 'BenTran',		#time : DateAndTime [ '2020-02-06T10:08:49.509766-05:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RobotMind,				#isMetaSide : false			},			#name : #'standardizePoint:Integer:',			#protocol : #'as yet unclassified',			#sourceCode : 'standardizePoint: xPoint Integer: yPoint\r\t"this will take a given coordinate and it wrap around the board"\r\t| newXPoint newYPoint |.\r\tnewXPoint := (xPoint rem) abs.\r\tnewYPoint := (yPoint rem) abs.\r\t^ Array newFrom: {newXPoint . newYPoint}.\r\t\r\t',			#stamp : 'BenTran 2/6/2020 10:08',			#package : #JRMPC-Phase1-Minds		}	}}OmEntry {	#tags : {		#author : 'BenTran',		#time : DateAndTime [ '2020-02-06T10:13:52.180766-05:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RobotMind,				#isMetaSide : false			},			#name : #'Dijkstra:Robot:',			#protocol : #'as yet unclassified',			#sourceCode : 'Dijkstra: scanningRadius Robot: sketchRobot\r\t"create a new list of all points within the robots scanning radius ----------------------------------------"\r\t| grid pointsList x y|\r\tgrid := OrderedCollection new.\r\tpointsList := OrderedCollection new. \r\tx := sketchRobot location x.\r\ty := sketchRobot location y.\r\t\r\t 0 to: (scanningRadius * 2 + 1) do: [:xCord|\r\t\t0 to: (scanningRadius * 2 + 1) do: [:yCord|\r\t\t\t| xPoint yPoint |.\r\t\t\txPoint := x - scanningRadius + xCord.\r\t\t\tyPoint := y - scanningRadius + yCord.\r\t\t\t\r\t\t ].\r\t].\r\t',			#stamp : 'BenTran 2/6/2020 10:03',			#package : #JRMPC-Phase1-Minds		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RobotMind,				#isMetaSide : false			},			#name : #'Dijkstra:Robot:',			#protocol : #'as yet unclassified',			#sourceCode : 'Dijkstra: scanningRadius Robot: sketchRobot\r\t"create a new list of all points within the robots scanning radius ----------------------------------------"\r\t| grid pointsList x y|\r\tgrid := OrderedCollection new.\r\tpointsList := OrderedCollection new. \r\tx := sketchRobot location x.\r\ty := sketchRobot location y.\r\t\r\t 0 to: (scanningRadius * 2 + 1) do: [:xCord|\r\t\t0 to: (scanningRadius * 2 + 1) do: [:yCord|\r\t\t\t| xPoint yPoint point|.\r\t\t\txPoint := x - scanningRadius + xCord.\r\t\t\tyPoint := y - scanningRadius + yCord.\r\t\t\t"this will take a given coordinate and it wrap around the board"\r\t\t\tpoint := self standardizePoint: xPoint Integer: yPoint.\r\t\t\t(grid includes: point)ifFalse: [ "sometimes you get repeats because of the point standardization"\r\t\t\t\tgrid addLast:  point.\r\t\t\t\tpointsList addLast: point\r\t\t\t\t ].\r\t\t ].\r\t].\r\t',			#stamp : 'BenTran 2/6/2020 10:13',			#package : #JRMPC-Phase1-Minds		}	}}